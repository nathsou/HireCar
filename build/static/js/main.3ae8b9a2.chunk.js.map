{"version":3,"sources":["res/img/parking-picto.svg","res/img/car-picto.svg","components/HcSecondaryButton.tsx","components/Logo.tsx","redux/signUpTab/types.ts","redux/signInTab/types.ts","redux/signTabs/types.ts","redux/signTabs/actions.ts","redux/signUpTab/actions.ts","components/Form/HcFormGroup.tsx","components/Form/SignUpTab.tsx","redux/signInTab/actions.ts","components/Form/SignInTab.tsx","components/HcSignTabs.tsx","components/HcModal.tsx","redux/navbar/types.ts","components/HcNavbar.tsx","redux/navbar/actions.ts","redux/rentCarTab/types.ts","redux/rentParkingTab/types.ts","redux/rentTabs/types.ts","components/Form/RentCarTab.tsx","redux/rentCarTab/actions.ts","Utils.ts","redux/rentParkingTab/actions.ts","components/Form/RentParkingTab.tsx","components/HcRentTabs.tsx","redux/rentTabs/actions.ts","components/HcJumbotron.tsx","components/RecordItem.tsx","components/Records.tsx","components/MainContent.tsx","components/Footer.tsx","redux/carSearch/types.ts","redux/parkingSearch/types.ts","redux/rentCarTab/reducers.ts","redux/rentParkingTab/reducers.ts","redux/signUpTab/reducers.ts","redux/signInTab/reducers.ts","redux/configureStore.ts","redux/navbar/reducers.ts","redux/parkingSearch/reducers.ts","redux/carSearch/reducers.ts","redux/rentTabs/reducers.ts","redux/signTabs/reducers.ts","redux/parkingSearch/actions.ts","components/HcListItem.tsx","components/HcParkingList.tsx","components/HcParkingSearch.tsx","components/HcCarList.tsx","components/HcCarSearch.tsx","HireCar.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","HcSecondaryButton","props","react_default","a","createElement","Button_default","variant","type","onClick","handleClick","children","Logo","react_router_dom","to","className","defaultSignUpTabState","form_data","firstname","lastname","email","phone","password","confirm_password","form_errors","firstname_error","lastname_error","email_error","phone_error","password_error","confirm_password_error","valid_form","sending","UPDATE_SIGNUP_FIRSTNAME_INPUT","UPDATE_SIGNUP_LASTNAME_INPUT","UPDATE_SIGNUP_EMAIL_INPUT","UPDATE_SIGNUP_PHONE_INPUT","UPDATE_SIGNUP_PASSWORD_INPUT","UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT","SUBMIT_SIGNUP_FORM","SIGNUP_FORM_SENT","SIGNUP_FORM_RECEIVED","defaultSignInTabState","validForm","UPDATE_SIGNIN_EMAIL_INPUT","UPDATE_SIGNIN_PASSWORD_INPUT","SUBMIT_SIGNIN_FORM","SIGNIN_FORM_SENT","SIGNIN_FORM_RECEIVED","defaultSignTabsState","signin_tab","signup_tab","active_tab_key","CHANGE_SIGN_TAB","changeSignTab","postSignUpForm","data","salt","process","replace","dispatch","bcrypt","hash","then","hashed_pwd","filtered_keys","Object","keys","filter","key","sent_data","forEach","axios","post","concat","res","catch","reason","console","error","HcFormGroup","Form_default","Group","as","Col","md","this","size","controlId","Label","label","Control","name","placeholder","value","onChange","Component","SignUpTab","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleSubmit","e","preventDefault","onSignUpSubmit","onPostSignUpForm","inherits","createClass","_this2","_this$props$form_erro","firstnameError","lastnameError","emailError","phoneError","passwordError","confirmPasswordError","_this$props$form_data","onSubmit","Row","HcFormGroup_HcFormGroup","onFirstnameChange","onLastnameChange","onEmailChange","onPhoneChange","onPasswordChange","onConfirmPasswordChange","style","marginTop","onTabChange","connect","state","sign_tabs","target","postSignInForm","Axios","SignInTab","onSignInSubmit","onPostSignInForm","HcSignTabs","Tab_default","Container","id","activeKey","onSelect","Nav_default","Item","Link","eventKey","Content","Pane","Form_SignInTab","Form_SignUpTab","HcModal","Modal_default","show","onHide","handleClose","dialogClassName","aria-labelledby","centered","Header","closeButton","Body","components_HcSignTabs","defaultNavbarState","show_modal","TOGGLE_SIGN_MODAL","HcNavbar","Navbar_default","collapseOnSelect","expand","fixed","Brand","Toggle","aria-controls","Collapse","activeClassName","toggleModal","HcModal_HcModal","navbar","defaultRentCarTabState","car_search_input_value","start_date","end_date","UPDATE_CAR_SEARCH_INPUT","defaultRentParkingTabState","parking_search_input_value","autocomplete_airports","UPDATE_PARKING_SEARCH_INPUT","AIRPORTS_RECEIVED","defaultRentTabsState","rent_parking_spot_tab","rent_car_tab","CHANGE_RENT_TAB","RentCarTab","onCarSearchChange","textAlign","rent_tabs","propsToURIParams","entries","map","_ref","_ref2","slicedToArray","val","join","searchAirports","input","get","airports","RentParkingTab","onInput","onParkingSearchChange","onSelected","selected","_this$props","react","react_bootstrap_typeahead_es","multiple","options","onInputChange","updateParkingSearchInput","HcRentTabs","Form_RentParkingTab","Form_RentCarTab","HcJumbotron","Jumbotron_default","fluid","Container_default","Row_default","Col_default","lg","components_HcRentTabs","RecordItem","text","Records","MainContent","HcJumbotron_HcJumbotron","footer","defaultCarSearchState","cars","title","features","defaultParkingSearchState","parkings","viewport","width","height","latitude","longitude","zoom","fetching","UPDATE_MAP_VIEWPORT","REQUEST_PARKINGS","PARKINGS_RECEIVED","rentCarTabReducer","undefined","action","objectSpread","rentParkingTabReducer","signUpTabReducer","isValid","test","_state$form_data","every","field","signInTabReducer","root_reducer","combineReducers","parking_search","nb_places","price_per_day","car_search","fetchParkings","params","HcListItem","picto","src","alt","HcParkingList","HcListItem_HcListItem","assign","ParkingPicto","HcParkingSearch","match","airport","components_HcParkingList","esm","onViewportChange","vp","mapboxApiAccessToken","mapStyle","withRouter","updateViewport","airport_name","HcCarList","car","i","CarPicto","HcCarSearch","components_HcCarList","HireCar","es","store","createStore","compose","applyMiddleware","thunkMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","components_HcNavbar","react_router","exact","path","component","Footer_footer","Boolean","location","hostname","ReactDOM","render","HireCar_HireCar","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ae8b9a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/parking-picto.aff72231.svg\";","module.exports = __webpack_public_path__ + \"static/media/car-picto.29e9a214.svg\";","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\n\nexport default function (props: any) {\n\n    return (\n        <Button\n            ///@ts-ignore\n            variant='hc-secondary'\n            type={props.type}\n            onClick={() => props.handleClick ? props.handleClick() : {}}>\n            {props.children}\n        </ Button>\n    );\n}","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default function Logo() {\n    return (\n        <Link to=\"/\">\n            <span className=\"logo\">\n                Hire<span className=\"logo-light\">Car</span>\n            </span>\n        </Link>\n\n    );\n}","import { ChangeSignTabAction } from \"../signTabs/types\";\n\nexport interface SignUpFormDataState {\n    [index: string]: string;\n    firstname: string,\n    lastname: string,\n    email: string,\n    phone: string,\n    password: string,\n    confirm_password: string\n}\n\nexport interface SignUpTabState {\n    form_data: SignUpFormDataState,\n    form_errors: {\n        firstname_error: string,\n        lastname_error: string,\n        email_error: string,\n        phone_error: string,\n        password_error: string,\n        confirm_password_error: string,\n        [key: string]: string\n    },\n    valid_form: boolean,\n    sending: boolean\n}\n\nexport const defaultSignUpTabState: SignUpTabState = {\n    form_data: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        phone: '',\n        password: '',\n        confirm_password: '',\n    },\n    form_errors: {\n        firstname_error: '',\n        lastname_error: '',\n        email_error: '',\n        phone_error: '',\n        password_error: '',\n        confirm_password_error: '',\n    },\n    valid_form: false,\n    sending: false\n}\n\nexport const UPDATE_SIGNUP_FIRSTNAME_INPUT = \"UPDATE_SIGNUP_FIRSTNAME_INPUT\";\nexport interface UpdateSignUpFirstnameAction {\n    type: typeof UPDATE_SIGNUP_FIRSTNAME_INPUT,\n    value: string\n}\n\nexport const UPDATE_SIGNUP_LASTNAME_INPUT = \"UPDATE_SIGNUP_LASTNAME_INPUT\";\nexport interface UpdateSignUpLastnameAction {\n    type: typeof UPDATE_SIGNUP_LASTNAME_INPUT,\n    value: string\n}\n\nexport const UPDATE_SIGNUP_EMAIL_INPUT = \"UPDATE_SIGNUP_EMAIL_INPUT\";\nexport interface UpdateSignUpEmailAction {\n    type: typeof UPDATE_SIGNUP_EMAIL_INPUT,\n    value: string\n}\n\nexport const UPDATE_SIGNUP_PHONE_INPUT = \"UPDATE_SIGNUP_PHONE_INPUT\";\nexport interface SignUpUpdatePhoneAction {\n    type: typeof UPDATE_SIGNUP_PHONE_INPUT,\n    value: string\n}\n\nexport const UPDATE_SIGNUP_PASSWORD_INPUT = \"UPDATE_SIGNUP_PASSWORD_INPUT\";\nexport interface UpdateSignUpPasswordAction {\n    type: typeof UPDATE_SIGNUP_PASSWORD_INPUT,\n    value: string\n}\n\nexport const UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT = \"UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT\";\nexport interface UpdateSignUpConfirmPasswordAction {\n    type: typeof UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT,\n    value: string\n}\n\nexport const SUBMIT_SIGNUP_FORM = \"SUBMIT_SIGNUP_FORM\";\nexport interface SubmitSignUpAction {\n    type: typeof SUBMIT_SIGNUP_FORM\n}\n\nexport const SIGNUP_FORM_SENT = \"SEND_SIGNUP_FORM\";\nexport interface SignUpSentAction {\n    type: typeof SIGNUP_FORM_SENT\n}\n\nexport const SIGNUP_FORM_RECEIVED = \"SIGNUP_FORM_RECEIVED\";\nexport interface SignUpReceivedAction {\n    type: typeof SIGNUP_FORM_RECEIVED,\n}\n\n\nexport type SignUpActionTypes = UpdateSignUpFirstnameAction | UpdateSignUpLastnameAction | UpdateSignUpEmailAction | SignUpUpdatePhoneAction | UpdateSignUpPasswordAction | UpdateSignUpConfirmPasswordAction | SubmitSignUpAction | SignUpSentAction | SignUpReceivedAction | ChangeSignTabAction;","export interface SignInFormDataState {\n    [index: string]: string;\n    email: string,\n    password: string\n}\n\nexport interface SignInTabState {\n    form_data: SignInFormDataState,\n    form_errors: {\n        email_error: string,\n        password_error: string,\n        [key: string]: string\n    },\n    validForm: boolean\n}\n\nexport const defaultSignInTabState: SignInTabState = {\n    form_data: {\n        email: '',\n        password: '',\n    },\n    form_errors: {\n        email_error: '',\n        password_error: '',\n    },\n    validForm: false\n}\n\nexport const UPDATE_SIGNIN_EMAIL_INPUT = \"UPDATE_SIGNIN_EMAIL_INPUT\";\nexport interface UpdateSignInEmailAction {\n    type: typeof UPDATE_SIGNIN_EMAIL_INPUT,\n    value: string\n}\n\nexport const UPDATE_SIGNIN_PASSWORD_INPUT = \"UPDATE_SIGNIN_PASSWORD_INPUT\";\nexport interface UpdateSignInPasswordAction {\n    type: typeof UPDATE_SIGNIN_PASSWORD_INPUT,\n    value: string\n}\n\nexport const SUBMIT_SIGNIN_FORM = \"SUBMIT_SIGNIN_FORM\";\nexport interface SubmitSignInAction {\n    type: typeof SUBMIT_SIGNIN_FORM\n}\n\nexport const SIGNIN_FORM_SENT = \"SIGNIN_FORM_SENT\";\nexport interface SignInSentAction {\n    type: typeof SIGNIN_FORM_SENT\n}\n\nexport const SIGNIN_FORM_RECEIVED = \"SIGNIN_FORM_RECEIVED\";\nexport interface SignInReceivedAction {\n    type: typeof SIGNIN_FORM_RECEIVED,\n}\n\nexport type SignInActionTypes = UpdateSignInEmailAction | UpdateSignInPasswordAction | SubmitSignInAction | SignInSentAction | SignInReceivedAction;","import { SignUpTabState, defaultSignUpTabState } from \"../signUpTab/types\";\nimport { SignInTabState, defaultSignInTabState } from \"../signInTab/types\";\n\nexport interface SignTabsState {\n    signin_tab: SignInTabState,\n    signup_tab: SignUpTabState,\n    active_tab_key: string\n}\n\nexport const defaultSignTabsState: SignTabsState = {\n    signin_tab: defaultSignInTabState,\n    signup_tab: defaultSignUpTabState,\n    active_tab_key: 'sign_in'\n}\n\nexport const CHANGE_SIGN_TAB = \"CHANGE_SIGN_TAB\";\nexport interface ChangeSignTabAction {\n    type: typeof CHANGE_SIGN_TAB,\n    active_tab_key: string\n}\n\nexport type SignTabsActionTypes = ChangeSignTabAction;","import { ChangeSignTabAction, CHANGE_SIGN_TAB } from \"./types\";\n\n\nexport function changeSignTab(active_tab_key: string): ChangeSignTabAction {\n    return {\n        type: CHANGE_SIGN_TAB,\n        active_tab_key\n    }\n}","import axios, { AxiosResponse } from \"axios\";\nimport bcrypt from \"bcryptjs\";\nimport { Dispatch } from \"react\";\nimport { SignUpActionTypes, SignUpReceivedAction, SignUpUpdatePhoneAction, SIGNUP_FORM_RECEIVED, SIGNUP_FORM_SENT, SubmitSignUpAction, SUBMIT_SIGNUP_FORM, UpdateSignUpConfirmPasswordAction, UpdateSignUpEmailAction, UpdateSignUpFirstnameAction, UpdateSignUpLastnameAction, UpdateSignUpPasswordAction, UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT, UPDATE_SIGNUP_EMAIL_INPUT, UPDATE_SIGNUP_FIRSTNAME_INPUT, UPDATE_SIGNUP_LASTNAME_INPUT, UPDATE_SIGNUP_PASSWORD_INPUT, UPDATE_SIGNUP_PHONE_INPUT, SignUpFormDataState, SignUpSentAction } from \"./types\";\nimport { changeSignTab } from \"../signTabs/actions\";\n\nexport function updateSignUpFirstnameInput(value: string): UpdateSignUpFirstnameAction {\n    return {\n        type: UPDATE_SIGNUP_FIRSTNAME_INPUT,\n        value\n    };\n}\n\nexport function updateSignUpLastnameInput(value: string): UpdateSignUpLastnameAction {\n    return {\n        type: UPDATE_SIGNUP_LASTNAME_INPUT,\n        value\n    };\n}\n\nexport function updateSignUpEmailInput(value: string): UpdateSignUpEmailAction {\n    return {\n        type: UPDATE_SIGNUP_EMAIL_INPUT,\n        value\n    };\n}\n\nexport function updateSignUpPhoneInput(value: string): SignUpUpdatePhoneAction {\n    return {\n        type: UPDATE_SIGNUP_PHONE_INPUT,\n        value\n    };\n}\n\nexport function updateSignUpPasswordInput(value: string): UpdateSignUpPasswordAction {\n    return {\n        type: UPDATE_SIGNUP_PASSWORD_INPUT,\n        value\n    };\n}\n\nexport function updateSignUpConfirmPasswordInput(value: string): UpdateSignUpConfirmPasswordAction {\n    return {\n        type: UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT,\n        value\n    }\n}\n\nexport function submitSignUpForm(): SubmitSignUpAction {\n    return {\n        type: SUBMIT_SIGNUP_FORM\n    }\n}\n\nexport function signUpFormSent(): SignUpSentAction {\n    return {\n        type: SIGNUP_FORM_SENT\n    };\n}\n\nexport function signUpFormReceived(): SignUpReceivedAction {\n    return {\n        type: SIGNUP_FORM_RECEIVED\n    };\n}\n\n// TODO: email already exists\nexport function postSignUpForm(data: SignUpFormDataState) {\n    const salt = (process.env.REACT_APP_BCRYPT_SALT as string).replace(/_/g, '$');\n\n    return (dispatch: Dispatch<SignUpActionTypes>) => {\n        dispatch(signUpFormSent());\n\n        bcrypt.hash(data.password, salt as string)\n            .then(hashed_pwd => {\n                const filtered_keys = Object.keys(data)\n                    .filter(key => key !== \"confirm_password\");\n                const sent_data: { [index: string]: string; } = {};\n\n                filtered_keys.forEach(key => {\n                    sent_data[key] = key === 'password' ? hashed_pwd : data[key];\n                });\n\n                axios.post(`${process.env.REACT_APP_HIRECAR_API_URI}/users`, sent_data)\n                    .then((res: AxiosResponse) => {\n                        dispatch(signUpFormReceived());\n                        dispatch(changeSignTab('sign_in'));\n                    }).catch((reason: any) => {\n                        console.error(reason);\n                    });\n\n            });\n    };\n}","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\ninterface HcFormGroupProps {\n    size: string,\n    controlId: string,\n    className: string,\n    label: string,\n    type: string,\n    name: string,\n    placeholder: string,\n    value: string,\n    onChange: (event: any) => void\n}\n\nexport default class HcFormGroup extends Component<HcFormGroupProps> {\n    render() {\n        return (\n            <Form.Group as={Col} md={this.props.size} controlId={this.props.controlId}>\n                <Form.Label className={this.props.className}>{this.props.label}</Form.Label>\n                <Form.Control\n                    className={`form-control ${this.props.className ? 'is-invalid' : ''}`}\n                    type={this.props.type}\n                    name={this.props.name}\n                    placeholder={this.props.placeholder}\n                    value={this.props.value}\n                    onChange={this.props.onChange} />\n                {this.props.className ? <div className='invalid-feedback'>{this.props.className}</div> : null}\n            </Form.Group>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../../redux/configureStore\";\nimport { changeSignTab } from \"../../redux/signTabs/actions\";\nimport { submitSignUpForm, updateSignUpConfirmPasswordInput, updateSignUpEmailInput, updateSignUpFirstnameInput, updateSignUpLastnameInput, updateSignUpPasswordInput, updateSignUpPhoneInput, postSignUpForm } from \"../../redux/signUpTab/actions\";\nimport { SignUpTabState, SignUpFormDataState } from \"../../redux/signUpTab/types\";\nimport HcSecondaryButton from \"../HcSecondaryButton\";\nimport HcFormGroup from \"./HcFormGroup\";\n\ninterface SignUpTabProps extends SignUpTabState {\n    onFirstnameChange: typeof updateSignUpFirstnameInput,\n    onLastnameChange: typeof updateSignUpLastnameInput,\n    onEmailChange: typeof updateSignUpEmailInput,\n    onPhoneChange: typeof updateSignUpPhoneInput,\n    onPasswordChange: typeof updateSignUpPasswordInput,\n    onConfirmPasswordChange: typeof updateSignUpConfirmPasswordInput,\n    onSignUpSubmit: typeof submitSignUpForm,\n    onTabChange: typeof changeSignTab,\n    onPostSignUpForm: (data: SignUpFormDataState) => void\n}\n\nexport class SignUpTab extends Component<SignUpTabProps>{\n\n    public handleSubmit = (e: any) => {\n        e.preventDefault();\n        this.props.onSignUpSubmit();\n        if (this.props.valid_form === true) {\n            this.props.onPostSignUpForm(this.props.form_data);\n        }\n    }\n\n    public render() {\n        const { firstname_error: firstnameError, lastname_error: lastnameError, email_error: emailError, phone_error: phoneError, password_error: passwordError, confirm_password_error: confirmPasswordError } = this.props.form_errors;\n        const { firstname, lastname, email, phone, password, confirm_password } = this.props.form_data;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"6\" controlId=\"fistname\" className={firstnameError}\n                        label=\"Prénom\" type=\"text\"\n                        name=\"firstname\" placeholder=\"Votre prénom\"\n                        value={firstname}\n                        onChange={this.props.onFirstnameChange} />\n                    <HcFormGroup\n                        size=\"6\" controlId=\"lastname\" className={lastnameError}\n                        label=\"Nom\" type=\"text\"\n                        name=\"lastname\" placeholder=\"Votre nom\"\n                        value={lastname}\n                        onChange={this.props.onLastnameChange} />\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"signUpEmail\" className={emailError}\n                        label=\"Email\" type=\"text\"\n                        name=\"email\" placeholder=\"Veuillez entrer votre email\"\n                        value={email} onChange={this.props.onEmailChange} />\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"telephone\" className={phoneError}\n                        label=\"Téléphone\" type=\"tel\"\n                        name=\"phone\" placeholder=\"Veuillez entrer votre numéro\"\n                        value={phone} onChange={this.props.onPhoneChange} />\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"signUpPassword\" className={passwordError}\n                        label=\"Mot de passe\" type=\"password\"\n                        name=\"password\" placeholder=\"Veuillez entrer votre mot de passe\"\n                        value={password} onChange={this.props.onPasswordChange} />\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"signUpConfirmPassword\" className={confirmPasswordError}\n                        label=\"Confirmation du mot de passe\" type=\"password\"\n                        name=\"confirmPassword\" placeholder=\"Veuillez entrer votre mot de passe\"\n                        value={confirm_password} onChange={this.props.onConfirmPasswordChange} />\n                </Form.Row>\n                <div style={{ marginTop: \"15px\" }}>\n                    <HcSecondaryButton type=\"submit\">S'inscrire</HcSecondaryButton>\n                </div>\n\n                <p>Vous avez déjà un compte ?\n                    <span className=\"link\" onClick={() => this.props.onTabChange('sign_in')}> Identifiez-vous.</span>\n                </p>\n            </Form>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => state.sign_tabs.signup_tab,\n    {\n        onFirstnameChange: (e: any) => updateSignUpFirstnameInput(e.target.value),\n        onLastnameChange: (e: any) => updateSignUpLastnameInput(e.target.value),\n        onEmailChange: (e: any) => updateSignUpEmailInput(e.target.value),\n        onPhoneChange: (e: any) => updateSignUpPhoneInput(e.target.value),\n        onPasswordChange: (e: any) => updateSignUpPasswordInput(e.target.value),\n        onConfirmPasswordChange: (e: any) => updateSignUpConfirmPasswordInput(e.target.value),\n        onSignUpSubmit: () => submitSignUpForm(),\n        onTabChange: (active_tab_key: string) => changeSignTab(active_tab_key),\n        onPostSignUpForm: (data: SignUpFormDataState) => postSignUpForm(data)\n    }\n)(SignUpTab);","import Axios from \"axios\";\nimport { Dispatch } from \"react\";\nimport { SignInActionTypes, SignInFormDataState, SignInReceivedAction, SignInSentAction, SIGNIN_FORM_RECEIVED, SIGNIN_FORM_SENT, SubmitSignInAction, SUBMIT_SIGNIN_FORM, UpdateSignInEmailAction, UpdateSignInPasswordAction, UPDATE_SIGNIN_EMAIL_INPUT, UPDATE_SIGNIN_PASSWORD_INPUT } from \"./types\";\n\nexport function updateSignInEmailInput(value: string): UpdateSignInEmailAction {\n    return {\n        type: UPDATE_SIGNIN_EMAIL_INPUT,\n        value\n    };\n}\n\nexport function updateSignInPasswordInput(value: string): UpdateSignInPasswordAction {\n    return {\n        type: UPDATE_SIGNIN_PASSWORD_INPUT,\n        value\n    }\n}\n\nexport function submitSignInForm(): SubmitSignInAction {\n    return {\n        type: SUBMIT_SIGNIN_FORM\n    }\n}\n\nexport function signInFormSent(): SignInSentAction {\n    return {\n        type: SIGNIN_FORM_SENT\n    };\n}\n\nexport function signUpFormReceived(): SignInReceivedAction {\n    return {\n        type: SIGNIN_FORM_RECEIVED\n    };\n}\n\nexport function postSignInForm(data: SignInFormDataState) {\n    return (dispatch: Dispatch<SignInActionTypes>) => {\n        dispatch(signInFormSent());\n        Axios.post(`${process.env.REACT_APP_HIRECAR_API_URI}/login`, data)\n            .then(() => {\n                dispatch(signUpFormReceived());\n            }).catch((reason: any) => {\n                console.error(reason);\n            });\n    }\n}","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport HcSecondaryButton from \"../HcSecondaryButton\";\nimport HcFormGroup from \"./HcFormGroup\";\nimport { SignInTabState, SignInFormDataState } from \"../../redux/signInTab/types\";\nimport { updateSignInEmailInput, updateSignInPasswordInput, submitSignInForm, postSignInForm } from \"../../redux/signInTab/actions\";\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../../redux/configureStore\";\nimport { changeSignTab } from \"../../redux/signTabs/actions\";\n\ninterface SignInTabProps extends SignInTabState {\n    onEmailChange: typeof updateSignInEmailInput,\n    onPasswordChange: typeof updateSignInPasswordInput,\n    onSignInSubmit: typeof submitSignInForm,\n    onTabChange: typeof changeSignTab,\n    onPostSignInForm: (data: SignInFormDataState) => void\n}\n\nclass SignInTab extends Component<SignInTabProps> {\n\n    public handleSubmit = (e: any) => {\n        e.preventDefault();\n        this.props.onSignInSubmit();\n        if (this.props.validForm === true) {\n            this.props.onPostSignInForm(this.props.form_data);\n        }\n    }\n\n    public render() {\n        const { email_error, password_error } = this.props.form_errors;\n        const { email, password } = this.props.form_data;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"signInEmail\" className={email_error}\n                        label=\"Email\" type=\"text\"\n                        name=\"email\" placeholder=\"Veuillez entrer votre email\"\n                        value={email} onChange={this.props.onEmailChange} />\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"signInPassword\" className={password_error}\n                        label=\"Mot de passe\" type=\"password\"\n                        name=\"password\" placeholder=\"Veuillez entrer votre mot de passe\"\n                        value={password} onChange={this.props.onPasswordChange} />\n                </Form.Row>\n                <div style={{ marginTop: \"15px\" }}>\n                    <HcSecondaryButton type=\"submit\">Se connecter</HcSecondaryButton>\n                </div>\n                <p>Vous n'avez pas encore de compte ?\n                    <span className=\"link\" onClick={() => { this.props.onTabChange('sign_up') }}> Enregistrez-vous.</span>\n                </p>\n            </Form>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => state.sign_tabs.signin_tab,\n    {\n        onEmailChange: (e: any) => updateSignInEmailInput(e.target.value),\n        onPasswordChange: (e: any) => updateSignInPasswordInput(e.target.value),\n        onSignInSubmit: () => submitSignInForm(),\n        onTabChange: (active_tab_key: string) => changeSignTab(active_tab_key),\n        onPostSignInForm: (data: SignInFormDataState) => postSignInForm(data)\n    }\n)(SignInTab);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport SignUpTab from \"./Form/SignUpTab\";\nimport SignInTab from \"./Form/SignInTab\";\nimport { HcState } from \"../redux/configureStore\";\nimport { ChangeSignTabAction } from \"../redux/signTabs/types\";\nimport { changeSignTab } from \"../redux/signTabs/actions\";\n\ninterface HcSignTabsProps {\n    active_tab_key: string,\n    onSelect: (activeKey: string) => ChangeSignTabAction\n}\n\nclass HcSignTabs extends Component<HcSignTabsProps> {\n    public render() {\n\n        return (\n            <div className=\"container-tabs\">\n                <Tab.Container id=\"sign_tabs\" activeKey={this.props.active_tab_key} onSelect={this.props.onSelect}>\n                    <Nav variant=\"pills\">\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"sign_in\">Connexion</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"sign_up\">Inscription</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"sign_in\">\n                            <SignInTab />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"sign_up\">\n                            <SignUpTab />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => ({ active_tab_key: state.sign_tabs.active_tab_key }),\n    {\n        onSelect: changeSignTab\n    }\n)(HcSignTabs)","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport HcSignTabs from \"./HcSignTabs\";\n\ninterface HcModalProps {\n    show: boolean,\n    handleClose: () => void\n}\n\nexport default class HcModal extends Component<HcModalProps> {\n\n    render() {\n        return (\n            <Modal show={this.props.show} onHide={() => this.props.handleClose()} dialogClassName=\"modal-50w\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                    <HcSignTabs />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}","export interface NavbarState {\n    show_modal: boolean\n}\n\nexport const defaultNavbarState: NavbarState = {\n    show_modal: false\n}\n\nexport const TOGGLE_SIGN_MODAL = \"TOGGLE_SIGN_MODAL\";\nexport interface ToggleSignModalAction {\n    type: typeof TOGGLE_SIGN_MODAL\n}\n\nexport type NavbarActionTypes = ToggleSignModalAction;","import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport HcSecondaryButton from \"./HcSecondaryButton\";\nimport Logo from \"./Logo\";\nimport HcModal from './HcModal';\nimport { NavLink } from 'react-router-dom';\nimport { ToggleSignModalAction, NavbarState } from \"../redux/navbar/types\";\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../redux/configureStore\";\nimport { toggleShowModal } from \"../redux/navbar/actions\";\n\ninterface HcNavbarProps extends NavbarState {\n    show_modal: boolean,\n    toggleModal: () => ToggleSignModalAction\n}\n\nclass HcNavbar extends Component<HcNavbarProps> {\n\n    public render() {\n\n        return (\n            <header>\n                <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\">\n                    <Navbar.Brand>\n                        <h1><Logo /></h1>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n                        <Nav>\n                            <Nav.Item>\n                                <NavLink activeClassName='selected' to='/parking'>Location de parkings</NavLink>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <NavLink activeClassName='selected' to='/voiture'>Location de voitures</NavLink>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <HcSecondaryButton handleClick={this.props.toggleModal}>Connexion</HcSecondaryButton>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                <HcModal show={this.props.show_modal} handleClose={this.props.toggleModal} />\n            </header>\n        );\n    }\n}\n\n\nexport default connect(\n    (state: HcState) => state.navbar,\n    {\n        toggleModal: toggleShowModal\n    }\n)(HcNavbar)","import { ToggleSignModalAction, TOGGLE_SIGN_MODAL } from \"./types\";\n\nexport function toggleShowModal(): ToggleSignModalAction {\n    return {\n        type: TOGGLE_SIGN_MODAL\n    };\n}","\nexport interface RentCarTabState {\n    car_search_input_value: string,\n    start_date: Date | null,\n    end_date: Date | null\n}\n\nexport const defaultRentCarTabState: RentCarTabState = {\n    car_search_input_value: '',\n    start_date: null,\n    end_date: null\n};\n\nexport const UPDATE_CAR_SEARCH_INPUT = \"UPDATE_CAR_SEARCH_INPUT\";\n\nexport interface UpdateCarSearchAction {\n    type: typeof UPDATE_CAR_SEARCH_INPUT,\n    value: string\n}\n\nexport type RentCarTabActionTypes = UpdateCarSearchAction;","\nexport interface Airport {\n    id: number,\n    name: string,\n    lat: number,\n    lng: number\n}\n\nexport interface RentParkingTabState {\n    parking_search_input_value: string,\n    start_date: Date | null,\n    end_date: Date | null,\n    autocomplete_airports: string[]\n}\n\nexport const defaultRentParkingTabState: RentParkingTabState = {\n    parking_search_input_value: '',\n    start_date: null,\n    end_date: null,\n    autocomplete_airports: []\n};\n\nexport const UPDATE_PARKING_SEARCH_INPUT = \"UPDATE_PARKING_SEARCH_INPUT\";\nexport const AIRPORTS_RECEIVED = \"AIRPORTS_RECEIVED\";\n\n\nexport interface UpdateParkingSearchAction {\n    type: typeof UPDATE_PARKING_SEARCH_INPUT,\n    value: string\n}\n\n\nexport interface AirportsReceivedAction {\n    type: typeof AIRPORTS_RECEIVED,\n    airports: string[]\n}\n\nexport type RentParkingTabActionTypes = UpdateParkingSearchAction | AirportsReceivedAction;","import { RentCarTabState, defaultRentCarTabState, UpdateCarSearchAction } from \"../rentCarTab/types\";\nimport { defaultRentParkingTabState, RentParkingTabState, UpdateParkingSearchAction } from \"../rentParkingTab/types\";\n\nexport interface RentTabsState {\n    rent_parking_spot_tab: RentParkingTabState,\n    rent_car_tab: RentCarTabState,\n    active_tab_key: string\n}\n\nexport const defaultRentTabsState: RentTabsState = {\n    rent_parking_spot_tab: defaultRentParkingTabState,\n    rent_car_tab: defaultRentCarTabState,\n    active_tab_key: 'rent_parking_spot'\n};\n\nexport const CHANGE_RENT_TAB = \"CHANGE_RENT_TAB\";\n\nexport interface ChangeRentTabAction {\n    type: typeof CHANGE_RENT_TAB,\n    active_tab_key: string\n}\n\nexport type RentTabsActionTypes = ChangeRentTabAction | UpdateParkingSearchAction | UpdateCarSearchAction;","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport HcSecondaryButton from \"../HcSecondaryButton\";\nimport HcFormGroup from \"./HcFormGroup\";\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../../redux/configureStore\";\nimport { updateCarSearchInput } from \"../../redux/rentCarTab/actions\";\nimport { RentCarTabState } from \"../../redux/rentCarTab/types\";\n\ninterface RentCarTabProps extends RentCarTabState {\n    onCarSearchChange: typeof updateCarSearchInput\n}\n\nexport class RentCarTab extends Component<RentCarTabProps> {\n    public render() {\n        return (\n            <Form>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"12\" controlId=\"carLocation\"\n                        className=\"\" label=\"Lieu de départ\" type=\"text\"\n                        name=\"carLocation\" placeholder=\"Veuillez entrer le nom de l’aéroport\"\n                        value={this.props.car_search_input_value}\n                        onChange={this.props.onCarSearchChange} />\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"4\" controlId=\"carStartDate\"\n                        className=\"\" label=\"Début de départ\" type=\"date\"\n                        name=\"carStartDate\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                    <HcFormGroup size=\"2\" controlId=\"carStartHour\"\n                        className=\"\" label=\"Heure\" type=\"time\"\n                        name=\"carStartHour\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                    <HcFormGroup\n                        size=\"4\" controlId=\"carEndDate\"\n                        className=\"\" label=\"Date de retour\" type=\"date\"\n                        name=\"carEndDate\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                    <HcFormGroup\n                        size=\"2\" controlId=\"carEndHour\"\n                        className=\"\" label=\"Heure\" type=\"time\"\n                        name=\"carEndHour\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                </Form.Row>\n                <div style={{ textAlign: \"right\", marginTop: \"15px\" }}>\n                    <HcSecondaryButton type=\"submit\" >Rechercher</HcSecondaryButton>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => state.rent_tabs.rent_car_tab,\n    {\n        onCarSearchChange: (e: any) => updateCarSearchInput(e.target.value)\n    }\n)(RentCarTab);","import { UPDATE_CAR_SEARCH_INPUT, UpdateCarSearchAction } from \"./types\";\n\nexport function updateCarSearchInput(value: string): UpdateCarSearchAction {\n    return {\n        type: UPDATE_CAR_SEARCH_INPUT,\n        value\n    };\n}","\n// object props to x-www-form-urlencoded\nexport function propsToURIParams(props: {}): string {\n    return '?' + Object.entries(props).map(([key, val]) => `${key}=${val}`).join('&');\n}","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { propsToURIParams } from \"../../Utils\";\nimport { RentParkingTabActionTypes, UpdateParkingSearchAction, UPDATE_PARKING_SEARCH_INPUT, Airport, AirportsReceivedAction, AIRPORTS_RECEIVED } from \"./types\";\n\nexport function updateParkingSearchInput(value: string): UpdateParkingSearchAction {\n    return {\n        type: UPDATE_PARKING_SEARCH_INPUT,\n        value\n    };\n}\n\nexport function airportsReceived(airports: Airport[]): AirportsReceivedAction {\n    return {\n        type: AIRPORTS_RECEIVED,\n        airports: airports.map(({ name }) => name)\n    };\n}\n\nexport function searchAirports(input: string) {\n    return (dispatch: Dispatch<RentParkingTabActionTypes>) => {\n        axios.get(`${process.env.REACT_APP_HIRECAR_API_URI}/airports${propsToURIParams({ name: input })}`)\n            .then((res: AxiosResponse) => {\n                dispatch(airportsReceived((res.data).airports as Airport[]))\n            })\n            .catch((error: AxiosError) => {\n                console.error(error);\n            });\n    };\n}","import React, { Component, Fragment } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { HcState } from \"../../redux/configureStore\";\nimport { searchAirports, updateParkingSearchInput } from \"../../redux/rentParkingTab/actions\";\nimport { RentParkingTabState } from \"../../redux/rentParkingTab/types\";\nimport HcSecondaryButton from \"../HcSecondaryButton\";\nimport HcFormGroup from \"./HcFormGroup\";\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\n\ninterface RentParkingTabProps extends RentParkingTabState {\n    onParkingSearchChange: typeof updateParkingSearchInput,\n    searchAirports: (input: string) => void\n}\n\nclass RentParkingTab extends Component<RentParkingTabProps> {\n\n    public onInput = (input: string) => {\n        this.props.onParkingSearchChange(input);\n        this.props.searchAirports(input);\n    }\n\n    public onSelected = (selected: string[]) => {\n        this.onInput(selected[0]);\n    }\n\n    public render() {\n\n        const { autocomplete_airports, parking_search_input_value } = this.props;\n\n        return (\n            <Form>\n                <Form.Row>\n\n                    <Fragment>\n                        <Typeahead\n                            id='airport'\n                            multiple={false}\n                            options={autocomplete_airports}\n                            placeholder=\"Lieu de stationnement\"\n                            onInputChange={this.onInput}\n                            onChange={this.onSelected}\n                        />\n                    </Fragment>\n                </Form.Row>\n                <Form.Row>\n                    <HcFormGroup\n                        size=\"4\" controlId=\"parkingStartDate\"\n                        className=\"\" label=\"Début de la location\"\n                        name=\"parkingStartDate\" type=\"date\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                    <HcFormGroup\n                        size=\"2\" controlId=\"parkingStartHour\"\n                        className=\"\" label=\"Heure\" type=\"time\"\n                        name=\"parkingStartHour\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                    <HcFormGroup\n                        size=\"4\" controlId=\"parkingEndDate\"\n                        className=\"\" label=\"Fin de la location\" type=\"date\"\n                        name=\"parkingEndDate\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                    <HcFormGroup\n                        size=\"2\" controlId=\"parkingEndHour\"\n                        className=\"\" label=\"Heure\" type=\"time\"\n                        name=\"parkingEndHour\" placeholder=\"\"\n                        value=\"\"\n                        onChange={() => { }} />\n                </Form.Row>\n                <div style={{ textAlign: \"right\", marginTop: \"15px\" }}>\n                    <Link to={`parking/${parking_search_input_value}`}>\n                        <HcSecondaryButton>Rechercher</HcSecondaryButton>\n                    </Link>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => state.rent_tabs.rent_parking_spot_tab,\n    {\n        onParkingSearchChange: (value: string) => updateParkingSearchInput(value),\n        searchAirports: (input: string) => searchAirports(input)\n    }\n)(RentParkingTab);","import React, { Component } from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { connect } from \"react-redux\";\nimport { changeRentTab } from \"../redux/rentTabs/actions\";\nimport { ChangeRentTabAction } from \"../redux/rentTabs/types\";\nimport RentCarTab from \"./Form/RentCarTab\";\nimport RentParkingTab from \"./Form/RentParkingTab\";\nimport { HcState } from \"../redux/configureStore\";\n\ninterface HcRentTabsProps {\n    active_tab_key: string,\n    onSelect: (activeKey: string) => ChangeRentTabAction\n}\n\nclass HcRentTabs extends Component<HcRentTabsProps> {\n\n    public render() {\n        return (\n            <div className=\"container-tabs\">\n                <Tab.Container id=\"left-tabs-example\" activeKey={this.props.active_tab_key} onSelect={this.props.onSelect}>\n                    <Nav variant=\"pills\">\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"rent_parking_spot\">Location de parkings</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"rent_car\">Location de voitures</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"rent_parking_spot\">\n                            <RentParkingTab />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"rent_car\">\n                            <RentCarTab />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n        );\n    }\n\n}\n\nexport default connect(\n    (state: HcState) => ({ active_tab_key: state.rent_tabs.active_tab_key }),\n    {\n        onSelect: changeRentTab\n    }\n)(HcRentTabs);\n","import { ChangeRentTabAction, CHANGE_RENT_TAB } from \"./types\";\n\nexport function changeRentTab(active_tab_key: string): ChangeRentTabAction {\n    return {\n        type: CHANGE_RENT_TAB,\n        active_tab_key\n    };\n}","import React, { Component } from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport HcRentTabs from \"./HcRentTabs\";\n\nexport default class HcJumbotron extends Component {\n\n    public render() {\n        return (\n            <Jumbotron fluid>\n                <Container>\n                    <Row>\n                        <Col lg={5}>\n                            <h2 className=\"jumbotron-text\">\n                                Louez un parking d'aéroport, laissez votre véhicule et faites en profiter\n                                quelqu'un pendant votre absence.\n                            </h2>\n                        </Col>\n                        <Col lg={7}>\n                            <HcRentTabs />\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron >\n        );\n    }\n}","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function RecordItem(props: any) {\n    return (\n        <Col>\n            <div>\n                <p className=\"record-value\">{props.value}</p>\n                <p className=\"record-text\">{props.text}</p>\n            </div>\n        </Col>\n    );\n}","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport RecordItem from \"./RecordItem\";\nimport Logo from \"./Logo\";\n\nexport default function Records() {\n    return (\n        <div className=\"records-container\">\n            <Container>\n                <h2><Logo />, c'est actuellement...</h2>\n                <Row>\n                    <RecordItem value=\"21\" text=\"Utilisateurs\" />\n                    <RecordItem value=\"12\" text=\"Voitures à louer\" />\n                    <RecordItem value=\"145\" text=\"Places de parking\" />\n                </Row>\n            </Container>\n        </div>\n    );\n}","import React, { Component } from \"react\";\nimport HcJumbotron from './HcJumbotron';\nimport Records from './Records';\n\nexport default class MainContent extends Component {\n    render() {\n        return (\n            <main>\n                <HcJumbotron />\n                <Records />\n            </main>\n        );\n    }\n}","import React from \"react\";\nimport Logo from \"./Logo\";\n\nexport default function footer() {\n    return (\n        <footer>\n            <Logo />\n            <p>© HireCar 2019</p>\n        </footer>\n    );\n}","import { HcListItemProps } from \"../../components/HcListItem\";\n\nexport interface CarSearchState {\n    cars: HcListItemProps[],\n}\n\nexport const defaultCarSearchState: CarSearchState = {\n    cars: [\n        {\n            title: 'Fiat Punto Evo',\n            features: ['Manuelle', 'SP95', 'Pneus-neige', '5 places', '3 portes'].join('•'),\n            footer: '42€ • 12€ / jour'\n        },\n        {\n            title: 'Opel Astra',\n            features: ['Manuelle', 'Diesel', '5 places', '5 portes'].join('•'),\n            footer: '53€ • 15€ / jour'\n        },\n        {\n            title: \"Tesla Model 3\",\n            features: ['Automatique', 'Electrique', '5 places', '5 portes'].join('•'),\n            footer: '35€ • 10€ / jour'\n        },\n    ]\n};","import { HcListItemProps } from \"../../components/HcListItem\";\nimport { HcMapViewportProps } from \"../../components/HcParkingSearch\";\n\nexport interface ParkingSearchState {\n    parkings: HcListItemProps[],\n    fetching: boolean,\n    viewport: HcMapViewportProps\n}\n\nexport interface Parking {\n    id: string;\n    label: string;\n    lat: string;\n    lng: string;\n    price_per_day: string;\n    airport_id: string;\n    parking_lot_id: string;\n    nb_places: string;\n}\n\nexport const defaultParkingSearchState: ParkingSearchState = {\n    parkings: [],\n    viewport: {\n        width: 400,\n        height: 400,\n        latitude: 47.3,\n        longitude: 2.2,\n        zoom: 4.8\n    },\n    fetching: false\n};\n\nexport const UPDATE_MAP_VIEWPORT = 'UPDATE_MAP_VIEWPORT';\nexport const REQUEST_PARKINGS = 'REQUEST_PARKINGS';\nexport const PARKINGS_RECEIVED = 'PARKINGS_RECEIVED';\n\nexport interface UpdateMapViewportAction {\n    type: typeof UPDATE_MAP_VIEWPORT,\n    viewport: HcMapViewportProps\n}\n\nexport interface RequestParkingsAction {\n    type: typeof REQUEST_PARKINGS\n}\n\nexport interface ParkingsReceivedAction {\n    type: typeof PARKINGS_RECEIVED,\n    parkings: Parking[]\n}\n\nexport type ParkingSearchActionTypes = UpdateMapViewportAction | RequestParkingsAction | ParkingsReceivedAction;","import { defaultRentCarTabState, UpdateCarSearchAction, RentCarTabState, UPDATE_CAR_SEARCH_INPUT } from \"./types\";\n\nexport function rentCarTabReducer(\n    state = defaultRentCarTabState,\n    action: UpdateCarSearchAction\n): RentCarTabState {\n\n    switch (action.type) {\n        case UPDATE_CAR_SEARCH_INPUT:\n            return {\n                ...state,\n                car_search_input_value: action.value\n            };\n\n        default:\n            return state;\n    }\n    \n}","import { AIRPORTS_RECEIVED, defaultRentParkingTabState, RentParkingTabActionTypes, RentParkingTabState, UPDATE_PARKING_SEARCH_INPUT } from \"./types\";\n\nexport function rentParkingTabReducer(\n    state = defaultRentParkingTabState,\n    action: RentParkingTabActionTypes\n): RentParkingTabState {\n\n    switch (action.type) {\n        case UPDATE_PARKING_SEARCH_INPUT:\n            return {\n                ...state,\n                parking_search_input_value: action.value\n            };\n\n        case AIRPORTS_RECEIVED:\n            return {\n                ...state,\n                autocomplete_airports: action.airports\n            };\n\n        default:\n            return state;\n    }\n}","import { defaultSignUpTabState, SignUpActionTypes, SignUpTabState, SUBMIT_SIGNUP_FORM, UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT, UPDATE_SIGNUP_EMAIL_INPUT, UPDATE_SIGNUP_FIRSTNAME_INPUT, UPDATE_SIGNUP_LASTNAME_INPUT, UPDATE_SIGNUP_PASSWORD_INPUT, UPDATE_SIGNUP_PHONE_INPUT, SIGNUP_FORM_RECEIVED, SIGNUP_FORM_SENT } from \"./types\";\n\nexport function signUpTabReducer(\n    state = defaultSignUpTabState,\n    action: SignUpActionTypes\n): SignUpTabState {\n\n    let isValid = true;\n\n    switch (action.type) {\n        case UPDATE_SIGNUP_FIRSTNAME_INPUT:\n            isValid = action.value.length >= 2;\n            return {\n                ...state,\n                form_data: { ...state.form_data, firstname: action.value },\n                form_errors: { ...state.form_errors, firstname_error: isValid ? '' : 'Le prénom doit contenir au moins 2 caractères' }\n            };\n        case UPDATE_SIGNUP_LASTNAME_INPUT:\n            isValid = action.value.length >= 2;\n            return {\n                ...state,\n                form_data: { ...state.form_data, lastname: action.value },\n                form_errors: { ...state.form_errors, lastname_error: isValid ? '' : 'Le nom doit contenir au moins 2 caractères' }\n            };\n        case UPDATE_SIGNUP_EMAIL_INPUT:\n            isValid = /[A-Za-z0-9._-]*@[A-Za-z0-9]*.[A-Za-z]{2,4}/.test(action.value);\n            return {\n                ...state,\n                form_data: { ...state.form_data, email: action.value },\n                form_errors: { ...state.form_errors, email_error: isValid ? '' : 'Veuillez entrer une adresse email valide' }\n            };\n        case UPDATE_SIGNUP_PHONE_INPUT:\n            isValid = /(\\d\\d){4}\\d\\d/.test(action.value);\n            return {\n                ...state,\n                form_data: { ...state.form_data, phone: action.value },\n                form_errors: { ...state.form_errors, phone_error: isValid ? '' : 'Veuillez entrer un numéro valide' }\n            };\n        case UPDATE_SIGNUP_PASSWORD_INPUT:\n            isValid = action.value.length >= 3;\n            return {\n                ...state,\n                form_data: { ...state.form_data, password: action.value },\n                form_errors: { ...state.form_errors, password_error: isValid ? '' : 'Le mot de passe doit contenir au moins 3 caractères' }\n            };\n\n        case UPDATE_SIGNUP_CONFIRMPASSWORD_INPUT:\n            isValid = action.value === state.form_data.password ? true : false\n            return {\n                ...state,\n                form_data: { ...state.form_data, confirm_password: action.value },\n                form_errors: { ...state.form_errors, confirm_password_error: isValid ? '' : 'Le mot de passe n\\'est pas identique au précédent' }\n            };\n        case SUBMIT_SIGNUP_FORM:\n            const { firstname, lastname, email, phone, password, confirm_password } = state.form_data;\n            isValid = (Object\n                .keys(state.form_errors)\n                .every(key => state.form_errors[key] === '')) &&\n                ([\n                    firstname,\n                    lastname,\n                    email,\n                    phone,\n                    password,\n                    confirm_password\n                ].every(field => field !== ''));\n            return {\n                ...state,\n                valid_form: isValid ? true : false,\n\n                form_errors: {\n                    ...state.form_errors,\n                    firstname_error:\n                        (firstname === '' ? 'Le nom n\\'est pas indiqué' : '') ||\n                        (firstname.length >= 2 ? '' : 'Le prénom doit contenir au moins 2 caractères'),\n                    lastname_error:\n                        (lastname === '' ? 'Le prénom n\\'est pas indiqué' : '') ||\n                        (lastname.length >= 2 ? '' : 'Le nom doit contenir au moins 2 caractères'),\n                    email_error:\n                        (email === '' ? 'L\\'email n\\'est pas indiqué' : '') ||\n                        (/[A-Za-z0-9._-]*@[A-Za-z0-9]*.[A-Za-z]{2,4}/.test(email) ? '' : 'Veuillez entrer une adresse email valide'),\n                    phone_error:\n                        (phone === '' ? 'Le téléphone n\\'est pas indiqué' : '') ||\n                        (/(\\d\\d){4}\\d\\d/.test(phone) ? '' : 'Veuillez entrer un numéro valide'),\n                    password_error:\n                        (password === '' ? 'Le mot de passe n\\'est pas indiqué' : '') ||\n                        (password.length >= 3 ? '' : 'Le mot de passe doit contenir au moins 3 caractères'),\n                    confirm_password_error:\n                        (confirm_password === '' ? 'La confirmation du mot de passe n\\'est pas indiqué' : '') ||\n                        (password === confirm_password ? '' : 'Le mot de passe n\\'est pas identique au précédent')\n                }\n            };\n        case SIGNUP_FORM_SENT:\n            return {\n                ...state,\n                sending: true\n            };\n        case SIGNUP_FORM_RECEIVED:\n            return {\n                ...state,\n                sending: false\n            };\n        default:\n            return state;\n    }\n\n}","import { defaultSignInTabState, SignInActionTypes, SignInTabState, UPDATE_SIGNIN_EMAIL_INPUT, UPDATE_SIGNIN_PASSWORD_INPUT, SUBMIT_SIGNIN_FORM } from \"./types\";\n\nexport function signInTabReducer(\n    state = defaultSignInTabState,\n    action: SignInActionTypes\n): SignInTabState {\n\n    let isValid = true;\n\n    switch (action.type) {\n        case UPDATE_SIGNIN_EMAIL_INPUT:\n            return {\n                ...state,\n                form_data: { ...state.form_data, email: action.value }\n            };\n        case UPDATE_SIGNIN_PASSWORD_INPUT:\n            return {\n                ...state,\n                form_data: { ...state.form_data, password: action.value }\n            };\n        case SUBMIT_SIGNIN_FORM:\n            const { email, password } = state.form_data;\n            isValid = (Object\n                .keys(state.form_errors)\n                .every(key => state.form_errors[key] === '')) &&\n                ([\n                    email,\n                    password\n                ].every(field => field !== ''));\n            return {\n                ...state,\n                validForm: isValid ? true : false,\n                form_errors: {\n                    ...state.form_errors,\n                    email_error:\n                        (email === '' ? 'L\\'email n\\'est pas indiqué' : '') ||\n                        (/[A-Za-z0-9._-]*@[A-Za-z0-9]*.[A-Za-z]{2,4}/.test(email) ? '' : 'Veuillez entrer une adresse email valide'),\n                    password_error:\n                        (password === '' ? 'Le mot de passe n\\'est pas indiqué' : '') ||\n                        (password.length >= 3 ? '' : 'Le mot de passe contient au moins 3 caractères')\n                }\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport { carSearchReducer } from './carSearch/reducers';\nimport { CarSearchState } from './carSearch/types';\nimport { parkingSearchReducer } from './parkingSearch/reducers';\nimport { ParkingSearchState } from './parkingSearch/types';\nimport { rentTabsReducer } from './rentTabs/reducers';\nimport { RentTabsState } from './rentTabs/types';\nimport { SignTabsState } from './signTabs/types';\nimport { signTabsReducer } from './signTabs/reducers';\nimport { NavbarState } from './navbar/types';\nimport { navbarReducer } from './navbar/reducers';\nimport thunkMiddleware from 'redux-thunk'\n\nexport interface HcState {\n    navbar: NavbarState,\n    parking_search: ParkingSearchState,\n    car_search: CarSearchState,\n    rent_tabs: RentTabsState,\n    sign_tabs: SignTabsState\n}\n\nconst root_reducer = combineReducers({\n    navbar: navbarReducer,\n    parking_search: parkingSearchReducer,\n    car_search: carSearchReducer,\n    rent_tabs: rentTabsReducer,\n    sign_tabs: signTabsReducer\n});\n\nexport default function configureStore() {\n    return createStore(\n        root_reducer,\n        compose(\n            applyMiddleware(thunkMiddleware),\n            ///@ts-ignore\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n}","import { NavbarActionTypes, defaultNavbarState, NavbarState, TOGGLE_SIGN_MODAL } from \"./types\";\n\nexport function navbarReducer(\n    state = defaultNavbarState,\n    action: NavbarActionTypes\n): NavbarState {\n    switch (action.type) {\n        case TOGGLE_SIGN_MODAL:\n            return {\n                ...state,\n                show_modal: !state.show_modal\n            };\n\n        default:\n            return state;\n    }\n}","import { HcListItemProps } from \"../../components/HcListItem\";\nimport { defaultParkingSearchState, ParkingSearchActionTypes, ParkingSearchState, PARKINGS_RECEIVED, REQUEST_PARKINGS, UPDATE_MAP_VIEWPORT } from \"./types\";\n\nexport function parkingSearchReducer(\n    state = defaultParkingSearchState,\n    action: ParkingSearchActionTypes\n): ParkingSearchState {\n\n    switch (action.type) {\n        case UPDATE_MAP_VIEWPORT:\n            return {\n                ...state,\n                viewport: action.viewport\n            };\n\n        case REQUEST_PARKINGS:\n            return {\n                ...state,\n                fetching: true\n            };\n\n        case PARKINGS_RECEIVED:\n\n            const parkings: HcListItemProps[] = action.parkings.map(p => ({\n                title: p.label,\n                features: `${p.nb_places} places`,\n                footer: `${p.price_per_day} € / jour`\n            }));\n\n            return {\n                ...state,\n                fetching: false,\n                parkings\n            };\n        default:\n            return state;\n    }\n}","import { CarSearchState, defaultCarSearchState } from \"./types\";\n\nexport function carSearchReducer(\n    state = defaultCarSearchState\n): CarSearchState {\n    return state;\n}","import { rentCarTabReducer } from \"../rentCarTab/reducers\";\nimport { rentParkingTabReducer } from \"../rentParkingTab/reducers\";\nimport { defaultRentTabsState, RentTabsActionTypes, RentTabsState } from \"./types\";\n\nexport function rentTabsReducer(\n    state = defaultRentTabsState,\n    action: RentTabsActionTypes | any\n): RentTabsState {\n    return {\n        rent_parking_spot_tab: rentParkingTabReducer(state.rent_parking_spot_tab, action),\n        rent_car_tab: rentCarTabReducer(state.rent_car_tab, action),\n        active_tab_key: action.type === 'CHANGE_RENT_TAB' ? action.active_tab_key : state.active_tab_key\n    };\n}","import { defaultSignTabsState, SignTabsActionTypes, SignTabsState } from \"./types\";\nimport { signUpTabReducer } from \"../signUpTab/reducers\";\nimport { signInTabReducer } from \"../signInTab/reducers\";\n\nexport function signTabsReducer(\n    state = defaultSignTabsState,\n    action: SignTabsActionTypes | any\n): SignTabsState {\n    return {\n        signin_tab: signInTabReducer(state.signin_tab, action),\n        signup_tab: signUpTabReducer(state.signup_tab, action),\n        active_tab_key: action.type === 'CHANGE_SIGN_TAB' ? action.active_tab_key : state.active_tab_key\n    }\n}","import { HcMapViewportProps } from \"../../components/HcParkingSearch\";\nimport { UpdateMapViewportAction, UPDATE_MAP_VIEWPORT, RequestParkingsAction, REQUEST_PARKINGS, ParkingsReceivedAction, Parking, PARKINGS_RECEIVED, ParkingSearchActionTypes } from \"./types\";\nimport { Dispatch } from \"redux\";\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport { propsToURIParams } from \"../../Utils\";\n\nexport function updateViewport(viewport: HcMapViewportProps): UpdateMapViewportAction {\n    return {\n        type: UPDATE_MAP_VIEWPORT,\n        viewport\n    };\n}\n\nexport function requestParkings(): RequestParkingsAction {\n    return {\n        type: REQUEST_PARKINGS\n    };\n}\n\nexport function parkingsReceived(parkings: Parking[]): ParkingsReceivedAction {\n    return {\n        type: PARKINGS_RECEIVED,\n        parkings: parkings\n    };\n}\n\nexport interface ParkingSearchParams {\n    airport_name?: string\n}\n\n//TODO: Handle request errors\nexport function fetchParkings(params: ParkingSearchParams) {\n    return (dispatch: Dispatch<ParkingSearchActionTypes>) => {\n\n        dispatch(requestParkings());\n        axios.get(`${process.env.REACT_APP_HIRECAR_API_URI}/parking_lots${propsToURIParams(params)}`)\n            .then((res: AxiosResponse) => {\n                dispatch(parkingsReceived((res.data).airports as Parking[]))\n            })\n            .catch((error: AxiosError) => {\n                console.error(error);\n            });\n    };\n}","import React, { Component } from \"react\";\n\nexport interface HcListItemProps {\n    picto?: string,\n    title: string,\n    features: string,\n    footer: string\n}\n\nexport default class HcListItem extends Component<HcListItemProps> {\n\n    public render() {\n\n        const { picto, title, features, footer } = this.props;\n\n        return (\n            <div className='hc-list-item'>\n                <img src={picto} alt=\"Picto\" width=\"50\" height=\"50\" />\n                <div>\n                    <h2 className='hc-list-item-title'>{title}</h2>\n                    <p className='hc-list-item-features'>{features}</p>\n                    <p className='hc-list-footer'>{footer}</p>\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport HcListItem, { HcListItemProps } from \"./HcListItem\";\nimport Container from \"react-bootstrap/Container\";\nimport ParkingPicto from \"../res/img/parking-picto.svg\";\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../redux/configureStore\";\n\nexport interface HcParkingListProps {\n    parkings: HcListItemProps[]\n}\n\nclass HcParkingList extends Component<HcParkingListProps> {\n\n    public render() {\n\n        const { parkings } = this.props;\n\n        return (\n            <div>\n                <Container>\n                    {\n                        parkings.length !== 0 ?\n                            (<div className='hc-list'>\n                                {parkings.map(p =>\n                                    <HcListItem {...p} picto={ParkingPicto} key={p.title} />\n                                )}\n                            </div>)\n                            : (<p>No parking lots found</p>)\n                    }\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => ({ parkings: state.parking_search.parkings })\n)(HcParkingList);","import React, { Component } from \"react\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ReactMapGL, { ViewState } from 'react-map-gl';\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../redux/configureStore\";\nimport { updateViewport, fetchParkings } from \"../redux/parkingSearch/actions\";\nimport { ParkingSearchState } from \"../redux/parkingSearch/types\";\nimport HcParkingList from \"./HcParkingList\";\nimport { RouteComponentProps, withRouter, match } from \"react-router\";\n\ninterface HcParkingSearchPropsMatchParams {\n    airport: string\n}\n\ninterface HcParkingSearchProps extends RouteComponentProps, ParkingSearchState {\n    onViewportChange: (viewstate: HcMapViewportProps) => void,\n    fetchParkings: (input: string) => void,\n    match: match<HcParkingSearchPropsMatchParams>\n}\n\nexport interface HcMapViewportProps extends ViewState {\n    width: number | string,\n    height: number | string\n}\n\nclass HcParkingSearch extends Component<HcParkingSearchProps> {\n\n    constructor(props: HcParkingSearchProps) {\n        super(props);\n        this.props.fetchParkings(props.match.params.airport);\n    }\n\n    public render() {\n\n        const { fetching } = this.props;\n\n        return (\n            <main>\n                <Row>\n                    <Col lg={5}>\n                        {\n                            fetching ?\n                                <p>Recherche des parkings en cours...</p> :\n                                <HcParkingList />\n                        }\n                    </Col>\n                    <Col lg={7}>\n                        <div className=\"hc-maps\">\n                            <ReactMapGL\n                                {...this.props.viewport}\n                                onViewportChange={vp => this.props.onViewportChange(vp as HcMapViewportProps)}\n                                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\n                                mapStyle='mapbox://styles/mapbox/streets-v11'\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </main>\n        );\n    }\n}\n\nexport default\n    withRouter(\n        connect(\n            (state: HcState) => state.parking_search,\n            {\n                onViewportChange: (viewport: HcMapViewportProps) => updateViewport(viewport),\n                fetchParkings: (input: string) => fetchParkings({ airport_name: input })\n            }\n        )(HcParkingSearch)\n    );","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport HcListItem, { HcListItemProps } from \"./HcListItem\";\nimport { connect } from \"react-redux\";\nimport { HcState } from \"../redux/configureStore\";\nimport CarPicto from \"../res/img/car-picto.svg\";\n\nexport interface HcCarListProps {\n    cars: HcListItemProps[]\n}\n\nclass HcCarList extends Component<HcCarListProps> {\n\n    public render() {\n\n        return (\n            <main>\n                <Container>\n                    <div className='hc-list'>\n                        {this.props.cars.map((car, i) =>\n                            <HcListItem {...car} picto={CarPicto} key={`rent_car_${i}`} />\n                        )}\n                    </div>\n                </Container>\n            </main>\n        );\n    }\n}\n\nexport default connect(\n    (state: HcState) => state.car_search\n)(HcCarList);\n\n","import React, { Component } from \"react\";\nimport HcCarList from \"./HcCarList\";\n\nexport default class HcCarSearch extends Component {\n\n    render() {\n        return (\n            <HcCarList />\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport HcNavbar from './components/HcNavbar';\nimport MainContent from './components/MainContent';\nimport Footer from './components/Footer';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HcParkingSearch from './components/HcParkingSearch';\nimport HcCarSearch from './components/HcCarSearch';\n\nexport default class HireCar extends Component {\n  public render() {\n    return (\n      <Provider store={configureStore()}>\n        <BrowserRouter>\n          <HcNavbar />\n          <Route exact path='/' component={MainContent} />\n          <Route exact path='/parking/:airport' component={HcParkingSearch} />\n          <Route exact path='/voiture' component={HcCarSearch} />\n          <Footer />\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap-css-only/css/bootstrap.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport HireCar from './HireCar';\nimport './res/styles/hirecar.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HireCar />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}